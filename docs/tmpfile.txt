*****************数据库相关*********************
用户信息的存储有两种方式(采用第一种方式)
1.数据库建立一个用户信息表
微信墙前端程序，通过在每个用户表加入一个表示是否通过审核的键值，来判断用户所发的消息是否通过审核。
通过为TRUE，未通过为FALSE。
优点:存储用户信息所占的空间相对较小
缺点:微信墙数据读取过程中需要判断，时间花费先对较多
2.建立两个用户信息表，一个用于存储爬取来的用户信息，另一个用来存储通过审核的用户信息
优点:微信墙数据读取过程无判断，时间较短
缺点:过多的浪费了数据库存储空间



用户信息表设计
table name : userinfo
key : fackid    nickname    msgid    msg    time   audit
注: 用户头像存入本地目录，不存入数据库
要以msgid为主键，应为每一个消息的msgid均不同



****************数据处理流程相关****************
<?>优化:将爬取的用户信息先存入缓存，然后通过审核后存入数据库，否则直接删除<?>
1.当用户发来信息时，将用户数据存入数据库，初始化时audit值为FALSE。
2.通过backStage后台管理程序，审核用户相关信息。
(1)如果信息审核通过，将其审核字段标记为TRUE
(2)若果信息审核未通过，将信息删除。




***************消息管理页面中用户信息提取********************
msgid    fackid    nickname    msg    time

***************提取信息的正则表达式*********************
1.提取包含所有消息的字符串
/\{"msg_item(.*)msg_item/
2.在第1步的基础上提取msgid,fakeid,nickname,msg,time信息
"id":(\d*),.*"fakeid":"(\d*)","nick_name":"(.*)","date_time":(\d*),"content":"(.*)","source"




