*****************数据库相关*********************
用户信息的存储有两种方式(采用第一种方式)
1.数据库建立一个用户信息表
微信墙前端程序，通过在每个用户表加入一个表示是否通过审核的键值，来判断用户所发的消息是否通过审核。
通过为TRUE，未通过为FALSE。
优点:存储用户信息所占的空间相对较小
缺点:微信墙数据读取过程中需要判断，时间花费先对较多
2.建立两个用户信息表，一个用于存储爬取来的用户信息，另一个用来存储通过审核的用户信息
优点:微信墙数据读取过程无判断，时间较短
缺点:过多的浪费了数据库存储空间



用户信息表设计
database: wechat
----------------------------------------------------------------------------
table name: userMsg 存储用户信息与非图片消息
key: msgid(pri)    fackid    nickname    msg    time   audit
注: 用户头像和图片消息存储在本地目录
用户头像: /WechatWall/bsm/imgs/photos
图片消息: /WechatWall/bsm/imgs/msgs


****************数据处理流程相关****************
<?>优化:将爬取的用户信息先存入缓存，然后通过审核后存入数据库，否则直接删除<?>
1.当用户发来信息时，将用户数据存入数据库，初始化时audit值为FALSE。
2.通过backStage后台管理程序，审核用户相关信息。
(1)如果信息审核通过，将其审核字段标记为TRUE
(2)若果信息审核未通过，将信息删除。




***************消息管理页面中用户信息提取********************
msgid        fackid        nickname      msg          time
arr[1][]       arr[2][]        arr[3][]          arr[4][]      arr[5][]
***************提取信息的正则表达式*********************
1.提取包含所有消息的字符串
/\{"msg_item(.*)msg_item/
2.在第1步的基础上提取msgid,fakeid,nickname,msg,time信息
"id":(\d*),.*"fakeid":"(\d*)","nick_name":"(.*)","date_time":(\d*),"content":"(.*)","source"

用户头像、图片消息与动态表情url
动态表情
https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/0.gif
https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/12.gif
https://res.wx.qq.com/mpres/htmledition/images/icon/emotion/13.gif
图片消息
https://mp.weixin.qq.com/cgi-bin/getimgdata?token=661260512&msgid=204254737&mode=small&source=&fileId=0&ow=-1014756625
用户头像
https://mp.weixin.qq.com/misc/getheadimg?token=661260512&fakeid=1014756624&msgid=204254388


***************后台管理系统******************
两个内嵌式子页面:
1.审核通过: 显示消息相关信息
2.新消息: 给出审核通过与否的选项
(1)通过则显示在审核通过子页面,并将数据库中userMsg表中的audit字段updata为1
(2)未通过则直接删除消息

(一)当登陆消息管理系统时第一个内容页面是新消息页面,此时首先要执行一次这样的流程:
1.微信公众账号消息爬
2.将爬去到的数据写入数据库
3.然后将爬取的新消息在新消息内容页面显示出来
(二)每一次点击新消息按钮都会执行如下流程
1.微信公众账号消息爬
2.将爬去到的数据写入数据库
3.然后将爬取的新消息在新消息内容页面显示出来
(三)每一次点击审核通过按钮都会执行一下流程
1.从数据库中读取已经通过审核的消息
2.将读取到的消息在审核通过内容页面显示出来

nickname    fackid    time    msg     upwall    delete    operation



**************************index.php*********************************
require_once('./inc/main.inc.php');
// header("charset=utf-8");
echo "<meta charset='utf-8'>";
$wechat = new wechat($userWechat, $pwdWechat);
// $userMsg = $wechat->getUserMsg(); // 获取消息管理页面的用户消息
// $wechat->storeUserMsg($userMsg, $localhost, $usernameDB, $pwdDB, $database); // 存储用户消息与用户头像
$wechat->msgGetAndStore($localhost, $userDB, $pwdDB, $database);

// $username = $_POST['username'];
// $password = $_POST['password'];
// echo $username."<br>";
// echo $password."<br>";


*************************logout.php**************************
问题:
1.会话销毁后整个页面不能跳转至admin.php页面



<?php
do {
$db = new mysqlDB($localhost, $userDB, $pwdDB, $database);
$query = "SELECT nickname, content, fakeid FROM userMsg WHERE audit = '1'";
$auditedMsg = $db->find($query);
$msgNum = count($auditedMsg);  // 共$msgNum条消息,每次显示5条停顿5s,然后显示下5条

for ($i = 0; $i <$msgNUm, $i++) {


	for ($j = 0; $j < 5; $j++) {
		$msg = "<table>";
		$msg .= "<tr><td class = 'photo' rowspan= '2'><img src = '../images/photos/1014756624.jpeg'></td><td class = 'nickname'>nickname</td></tr>";
		$msg .= "<tr><td class = 'content'>哈哈哈哈哈哈哈</td></tr>";
		$msg .= "</table>";
		echo $msg;
	}
	sleep(5); // 等待5s后继续显示下5条数据
}

} while(TRUE);

?>


